unit Financeiro.View.RealizarVenda;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error,
  FireDAC.DatS, FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async,
  FireDAC.DApt, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.Mask, Vcl.DBCtrls, DataModuleConexao,
  Vcl.Buttons, Financeiro.Controller.Interfaces, Financeiro.Model.Usuarios,
  Vcl.ExtCtrls, uniGUIBaseClasses, uniGUIClasses, uniDateTimePicker,
  uniDBDateTimePicker, Vcl.Grids, Vcl.DBGrids, Vcl.NumberBox;

type
  TFrmRealizarVenda = class(TForm)
    Panel2: TPanel;
    Label6: TLabel;
    PanelFooter: TPanel;
    BitBtnFecharPesquisa: TBitBtn;
    BitBtnIncluirPesquisa: TBitBtn;
    DSPesquisaProduto: TDataSource;
    FDQPesquisaProduto: TFDQuery;
    Panel3: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    edIdFuncionario: TDBEdit;
    edId: TDBEdit;
    edIdCliente: TDBEdit;
    edNomeFuncionario: TEdit;
    BitBtnLKPFuncionario: TBitBtn;
    edNomeCliente: TEdit;
    BitBtnLKPCliente: TBitBtn;
    LKPformasdepagamento: TDBLookupComboBox;
    DBEdit1: TDBEdit;
    Button1: TButton;
    Panel1: TPanel;
    Label7: TLabel;
    Label8: TLabel;
    SpeedButton1: TSpeedButton;
    edIdProduto: TEdit;
    edNomeProduto: TEdit;
    btnLKPProduto: TBitBtn;
    dbgrid1: TDBGrid;
    Panel4: TPanel;
    Label10: TLabel;
    edPrecoPrazo: TEdit;
    Panel5: TPanel;
    Label11: TLabel;
    edPrecoVista: TEdit;
    edQuantidade: TNumberBox;
    BitBtn1: TBitBtn;
    BitBtn2: TBitBtn;
    procedure BitBtnLKPFuncionarioClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BitBtnLKPClienteClick(Sender: TObject);
    procedure BitBtnFecharPesquisaClick(Sender: TObject);
    procedure btnLKPProdutoClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure SpeedButton1Click(Sender: TObject);
  private
    procedure LimpaEdit;
    procedure RealizarContagem(var contagem: Integer);
    procedure InsertDbGrid(contagem: Integer);
    procedure BuscarProduto;
    { Private declarations }
  public
    { Public declarations }
    comandosSQl: iComandosSQL;
    valorVista, ValorPrazo : double;
  end;

var
  FrmRealizarVenda: TFrmRealizarVenda;

implementation

{$R *.dfm}

uses
  Financeiro.View.LookUpPadrao, Financeiro.Model.comandosSQl;

procedure TFrmRealizarVenda.BitBtnFecharPesquisaClick(Sender: TObject);
begin
  DMUsuarios.FDQVenda1.Cancel;
  self.Close;
end;

procedure TFrmRealizarVenda.BitBtnLKPClienteClick(Sender: TObject);
begin
  FrmPesquisa.Caption := 'Pesquisar Clientes';
  comandosSQl.Comandos(FrmPesquisa.FDQLookUp,
    ' select cliM_id as "Código", cliM_nome as "Nome" from clienteMestre ');
  FrmPesquisa.ShowModal;
  edIdCliente.Text := FrmPesquisa.id;
  edNomeCliente.Text := FrmPesquisa.Nome;
end;

procedure TFrmRealizarVenda.BitBtnLKPFuncionarioClick(Sender: TObject);
begin
  FrmPesquisa.Caption := 'Pesquisar Funcionarios';
  comandosSQl.Comandos(FrmPesquisa.FDQLookUp,
    ' select fun_id as "Código", fun_nome as "Nome" from funcionarios ');
  FrmPesquisa.ShowModal;
  edIdFuncionario.Text := FrmPesquisa.id;
  edNomeFuncionario.Text := FrmPesquisa.Nome;
end;

procedure TFrmRealizarVenda.btnLKPProdutoClick(Sender: TObject);
begin
  FrmPesquisa.Caption := 'Pesquisar Produtos';
  comandosSQl.Comandos(FrmPesquisa.FDQLookUp,
    ' select prod_id as "Código", prod_Nome as "Nome" from produtos');
  FrmPesquisa.ShowModal;
  edIdProduto.Text := FrmPesquisa.id;
  edNomeProduto.Text := FrmPesquisa.Nome;
end;

procedure TFrmRealizarVenda.Button1Click(Sender: TObject);
begin
 
  //DMUsuarios.FDQVenda1.post;
end;

procedure TFrmRealizarVenda.FormCreate(Sender: TObject);
begin
  FrmPesquisa := TFrmPesquisa.Create(self);
  comandosSQl := TComandoSQL.New;
  DMUsuarios.FDQVenda1.edit;
end;

procedure TFrmRealizarVenda.SpeedButton1Click(Sender: TObject);
var
  contagem: integer;
begin
  RealizarContagem(contagem);
  BuscarProduto;
  InsertDbGrid(contagem);
  LimpaEdit;
  
  //DMUsuarios.FDQContagem.Refresh;

  //edPrecoVista.Text := DMUsuarios.FDQContagem.FieldByName('ValorVista').Value;
  //edPrecoPrazo.Text := DMUsuarios.FDQContagem.FieldByName('ValorPrazo').Value; 

end;

procedure TFrmRealizarVenda.LimpaEdit;
begin
  edIdProduto.Text := '';
  edNomeProduto.Text := '';
  edQuantidade.Text := '';
end;

procedure TFrmRealizarVenda.RealizarContagem(var contagem: Integer);
var
  textosql: string;
begin
  textosql := ' select max(ven2_nrItem) as "contagem", ' + 
              ' sum(ven2_ValorVista) as "ValorVista", ' + 
              ' sum(ven2_valorPrazo) as "ValorPrazo" ' + 
              ' from venda2 where ven2_MestreId = :pMestre';
  //comandosSQl.Comandos(DMUsuarios.FDQContagem, textosql, 'pMestre', edId.Text);
  //if DMUsuarios.FDQContagem.FieldByName('contagem').Value = null then
    //contagem := 0
  //else
    //contagem := DMUsuarios.FDQContagem.FieldByName('contagem').Value;
end;

procedure TFrmRealizarVenda.InsertDbGrid(contagem: Integer);
var
  valor: Double;
begin
  DMUsuarios.FDQVenda2.insert;
  dbgrid1.Columns[2].Field.Text := (contagem + 1).ToString;
  dbgrid1.Columns[3].Field.Text := edIdProduto.Text;
  dbgrid1.Columns[4].Field.Text := edNomeProduto.Text;
  dbgrid1.Columns[5].Field.Text := edQuantidade.Text;
  valor := FDQPesquisaProduto.FieldByName('prod_ValorUni').Value * StrToint(edQuantidade.Text);
  dbgrid1.Columns[6].Field.Text := valor.ToString;
  dbgrid1.Columns[7].Field.Text := (valor * 0.90).ToString;
  DMUsuarios.FDQVenda2.post;
end;

procedure TFrmRealizarVenda.BuscarProduto;
begin
  comandosSQl.Comandos(FDQPesquisaProduto, ' select * from produtos where prod_id = ' + edIdProduto.Text);
end;

end.
